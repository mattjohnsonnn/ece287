module mines_top_module (
    input wire        CLOCK_50,
    input wire [3:0]  KEY,
    input wire [9:0]  SW,
    output wire [6:0] HEX0,
    output wire [6:0] HEX1,
    output wire [6:0] HEX2,
    output wire [6:0] HEX3,
    output wire [9:0] LEDR,
    output wire       VGA_BLANK_N,
    output wire [7:0] VGA_B,
    output wire       VGA_CLK,
    output wire [7:0] VGA_G,
    output wire       VGA_HS,
    output wire [7:0] VGA_R,
    output wire       VGA_SYNC_N,
    output wire       VGA_VS
);

    // Internal wires
    wire [14:0] idx_location;
    wire [15:0] mine_map;
    wire placement_done;
    wire [7:0] pixel_color;
    wire rst;
    
    assign rst = KEY[0];

    // Board movement instance
    board_movement board_ctrl (
        .clk(CLOCK_50),
        .rst(rst),
        .KEY(KEY),
        .SW(SW),
        .idx_location(idx_location)
    );

    // Mine placement instance
    mine_placement mine_ctrl (
        .clk(CLOCK_50),
        .rst(rst),
        .sw(SW[3:0]),
        .init_game(KEY[1]),
        .mine_map(mine_map),
        .placement_done(placement_done)
    );

    // Mine reveal instance
    mine_reveal reveal_ctrl (
        .clk(CLOCK_50),
        .rst(rst),
        .click_x(SW[9:0]),      // Using switches for click position
        .click_y(SW[9:0]),      // Using switches for click position
        .click_valid(KEY[2]),
        .mine_detected(placement_done),
        .pixel_color(pixel_color)
    );

    // VGA driver instance
    vga_driver_to_frame_buf vga_ctrl (
        .CLOCK_50(CLOCK_50),
        .KEY(KEY),
        .SW(SW),
        .HEX0(HEX0),
        .HEX1(HEX1),
        .HEX2(HEX2),
        .HEX3(HEX3),
        .LEDR(LEDR),
        .VGA_BLANK_N(VGA_BLANK_N),
        .VGA_B(VGA_B),
        .VGA_CLK(VGA_CLK),
        .VGA_G(VGA_G),
        .VGA_HS(VGA_HS),
        .VGA_R(VGA_R),
        .VGA_SYNC_N(VGA_SYNC_N),
        .VGA_VS(VGA_VS),
        .idx_location(idx_location)
    );

endmodule
